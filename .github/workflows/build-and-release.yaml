on: push

defaults:
  run:
    shell: bash

jobs:
  build-pyinstaller:
    runs-on: 'windows-2022'

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Run set_version script
      uses: ./.github/actions/run-set_version_script
      with:
        venv-bin-dir: Scripts # idk why windows does this different

    - name: Upgrade pip
      run: pip install --upgrade pip
    - name: Install requirements
      run: pip install --requirement requirements-dev.txt
    - name: Run PyInstaller
      run: pyinstaller OATFWGUI.spec

    - name: Smoke test
      run: ./dist/OATFWGUI/OATFWGUI.exe --no-gui

    - name: Retrieve version
      id: version
      run: echo "::set-output name=VERSION::$(./dist/OATFWGUI/OATFWGUI.exe --version)"

    # Work around stupid issue that GHA can't store file permissions on artifacts
    - name: Store which files are executable
      run: pushd dist/ && find . -type f -executable -print > restore_executable_permissions.txt && popd
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: OATFWGUI_${{ steps.version.outputs.VERSION }}_${{ runner.os }}_${{ runner.arch }}
        path: dist/*

  build-virtualenv:
    runs-on: 'ubuntu-20.04'

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Run set_version script
      uses: ./.github/actions/run-set_version_script

    # Fixes a bug when running the smoke test
    # https://stackoverflow.com/a/67205123
    - name: Install OpenGL
      run: sudo apt-get install freeglut3 freeglut3-dev
    - run: mkdir dist/
    - run: cp -rv OATFWGUI/ dist/
    - run: cp -v scripts/OATFWGUI_Linux.sh dist/
    - run: cp -v requirements.txt dist/

    - name: Smoke test
      run: QT_QPA_PLATFORM=offscreen ./dist/OATFWGUI_Linux.sh --no-gui

    - name: Retrieve version
      id: version
      run: echo "::set-output name=VERSION::$(./dist/OATFWGUI_Linux.sh --version | tail -1)"

    # Work around stupid issue that GHA can't store file permissions on artifacts
    - name: Store which files are executable
      run: pushd dist/ && find . -type f -executable -print > restore_executable_permissions.txt && popd
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: OATFWGUI_${{ steps.version.outputs.VERSION }}_${{ runner.os }}_${{ runner.arch }}
        path: dist/*

  publish-release:
    # only publish release on tags
    if: ${{ startsWith(github.ref, 'refs/tags/') == true }}
    needs: [build-pyinstaller, build-virtualenv]
    runs-on: 'ubuntu-20.04'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Restore executable permissions
        run: |
          set -e
          shopt -s nullglob
          PERM_FILE='restore_executable_permissions.txt'
          for dir in artifacts/*/; do
            echo "Entering $dir"
            pushd "$dir"
            if [ ! -f "$PERM_FILE" ]; then
              echo "Could not find permissions file ${PERM_FILE}!"
              continue
            fi
            while IFS= read -r f_path || [ -n "$f_path" ]; do
              echo "Restoring execution on $f_path"
              chmod +x "$f_path"
            done < "$PERM_FILE"
            rm "$PERM_FILE"
            popd
          done
      - name: Zip artifacts
        run: |
          set -e
          shopt -s nullglob
          pushd artifacts/
          for dir in ./*/; do
            out_zip="../$(basename $dir).zip"
            echo "Zipping $dir into $out_zip"
            zip -8 --recurse-paths "$out_zip" "$dir"
          done
          popd
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            *.zip